source files:
    ~/codebase/madminer/examples/ttbar2/ttbar_lr_multi.py
    ~/codebase/madminer/momemta/ttbar.cc
    ~/codebase/madminer/momemta/ttbar.lua

reproducing:
0. get the right environment 
    conda activate mm_vs_mem
    source /home/zbhatti/util/root_build/bin/thisroot.sh

1. run madminer script
    cd ~/codebase/madminer/examples/ttbar2
    python -u ttbar_lr_multi.py 2>&1 |tee smearing_1.out

2. export x_test.npy into x_test.csv
    python -c 'import numpy as np; x_test = np.load("/home/zbhatti/codebase/madminer/examples/ttbar2/data/samples/x_test_w_smearing.npy"); np.savetxt("/home/zbhatti/codebase/madminer/momemta/inputs/x_test_w_smearing.csv", x_test, delimiter=",")'

3. copy output and artifacts from madminer for analysis script
    cd ~/codebase/madminer/examples/ttbar2
    cp models/alice_* ../../momemta/inputs/alice_wo_smearing/
    cp data/samples/x_test_w_smearing.npy ../../momemta/inputs/

4. compile momemta
    cd ~/codebase/madminer/momemta
    confirm source and lua files match experiment setup
    /usr/bin/c++   -Wall -pedantic -Wextra -fcx-fortran-rules -fcx-limited-range -O2 -g -DNDEBUG   ttbar.cc -o ttbar.exe -Wl,-rpath,/home/zbhatti/util/MoMEMta-1.0.0/build:/home/zbhatti/util/root_build/lib /home/zbhatti/util/MoMEMta-1.0.0/build/libmomemta.so.1.0.0 /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl_cpp.a /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_cpp.a /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5_hl.a /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5.a -lpthread -lsz -lz -ldl -lm /home/zbhatti/util/root_build/lib/libCore.so /home/zbhatti/util/root_build/lib/libRIO.so /home/zbhatti/util/root_build/lib/libNet.so /home/zbhatti/util/root_build/lib/libHist.so /home/zbhatti/util/root_build/lib/libGraf.so /home/zbhatti/util/root_build/lib/libGraf3d.so /home/zbhatti/util/root_build/lib/libGpad.so /home/zbhatti/util/root_build/lib/libTree.so /home/zbhatti/util/root_build/lib/libRint.so /home/zbhatti/util/root_build/lib/libPostscript.so /home/zbhatti/util/root_build/lib/libMatrix.so /home/zbhatti/util/root_build/lib/libPhysics.so /home/zbhatti/util/root_build/lib/libMathCore.so /home/zbhatti/util/root_build/lib/libThread.so /home/zbhatti/util/root_build/lib/libGenVector.so -I/home/zbhatti/util/MoMEMta-1.0.0/include -I/home/zbhatti/util/root_build/include -I/usr/include/hdf5/serial
    
5. run momemta
    cd ~/codebase/madminer/momemta
    ./ttbar.exe ~/codebase/madminer/examples/ttbar2/data/miner_output_with_data.h5 ~/codebase/madminer/momemta/inputs/x_test.csv ~/codebase/madminer/momemta/weights11.csv 2>&1 |tee ~/codebase/madminer/momemta/log13.out

6. analysis script
    cd ~/codebase/madminer/momemta
    jupyter-notebook
    http://localhost:8888/notebooks/codebase/madminer/momemta/Momemta%20Ratios%20Analysis.ipynb
    update weights file created by momemta



For remote:
0. confirm madminer_runner.sh is running setup/generate/train as necessary
1. as yourself:
    git pull origin ttbar_multiple_theta
    conda activate python-mm-27
    cd /home/zb609/scratch_dir/madminer/examples/ttbar
    a. setup:
        python batch_madminer_event_runner.py ~/scratch_dir/madminer_data_more_benchmarks setup

    b. generate:
        sbatch --array 1-100 madminer_generate.sh ~/scratch_dir/madminer_data_more_benchmarks few
        sbatch --array 1-100 madminer_generate.sh ~/scratch_dir/madminer_data_more_benchmarks many
    
    c. train:
        


2. cp x_test.npy from hpc to local AND export x_test.npy to x_test.csv
    cd ~/codebase/madminer/momemta
    scp zb609@prince:~/scratch_dir/madminer_data/data/samples/x_test.npy inputs/
    python -c 'import numpy as np; x_test = np.load("/home/zbhatti/codebase/madminer/momemta/inputs/x_test.npy"); np.savetxt("/home/zbhatti/codebase/madminer/momemta/inputs/x_test.csv", x_test, delimiter=",")'

3. copy artifacts for analysis script from hpc to local
    cd ~/codebase/madminer/momemta
    scp zb609@prince:~/scratch_dir/madminer_data/models/alice_* inputs/alice_hpc/

# export momemta matrix elements:
    cd ~/util/MG5_aMC_v2_6_5
    bin/mg5_aMC
    generate p p > t t~, (t > w+ b, w+ > mu+ vm), (t~ > w- b~, w- > mu- vm~)
    output MoMEMta ttbarMuMu

    maybe not needed:
    cd ttbarMuMu && mkdir build && cd build
    /opt/cmake-3.14.0-Linux-x86_64/bin/cmake -DMoMEMta_DIR=~/util/MoMEMta-1.0.0/build ..
    make -j4

    rebuild Momemta, registering the new MatrixElement methods to the central factory
    cp -r ~/util/MG5_aMC_v2_6_5/ttbarMuMu ~/util/MoMEMta-1.0.0//MatrixElements/
    cd ~/util/MoMEMta-1.0.0/build
    make clean
    edit /home/zbhatti/util/MoMEMta-1.0.0/MatrixElements/ttbarMuMu/CMakeLists.txt to reflect simpler cmake args
    /opt/cmake-3.14.0-Linux-x86_64/bin/cmake -DPYTHON_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/home/zbhatti/util/ -DBOOST_ROOT=/home/zbhatti/util/MG5_aMC_v2_6_5/HEPTools/boost/boost_1_59_0/ -DBoost_DEBUG=ON  -DEXAMPLES=ON ..
    make -j4


next step:
    - increase statistics (double worker count)
    - massless b
